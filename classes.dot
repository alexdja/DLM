digraph "classes" {
rankdir=BT
charset="utf-8"
"widgets.FunctionWidget" [color="black", fontcolor="black", label=<{FunctionWidget|small : dict<br ALIGN="LEFT"/>widgetParams : tuple<br ALIGN="LEFT"/>|getinput()<br ALIGN="LEFT"/>getname()<br ALIGN="LEFT"/>set_functioninfo(info)<br ALIGN="LEFT"/>setposition(start_x, start_y)<br ALIGN="LEFT"/>setsize(height, label_width, input_width)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"graph.Graph" [color="black", fontcolor="black", label=<{Graph|lp : NoneType<br ALIGN="LEFT"/>major_radius<br ALIGN="LEFT"/>minor_radius<br ALIGN="LEFT"/>plot_limits : list<br ALIGN="LEFT"/>plots_generator<br ALIGN="LEFT"/>plotter : NoneType<br ALIGN="LEFT"/>x_axe : ndarray<br ALIGN="LEFT"/>y_axe : ndarray<br ALIGN="LEFT"/>z_axe : ndarray<br ALIGN="LEFT"/>|close()<br ALIGN="LEFT"/>drawcable(cable, color)<br ALIGN="LEFT"/>drawcables(cables, colors)<br ALIGN="LEFT"/>drawlineplot(cables, colors, comments, functitle)<br ALIGN="LEFT"/>drawtorus(precision, plotter)<br ALIGN="LEFT"/>generatecolors(number)<br ALIGN="LEFT"/>setplotsnum(number)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"httplib2.Http" [color="black", fontcolor="black", label=<{Http|authorizations : list<br ALIGN="LEFT"/>ca_certs : NoneType<br ALIGN="LEFT"/>cache : FileCache, NoneType<br ALIGN="LEFT"/>certificates : KeyCerts<br ALIGN="LEFT"/>connections : dict<br ALIGN="LEFT"/>credentials : Credentials<br ALIGN="LEFT"/>disable_ssl_certificate_validation : bool<br ALIGN="LEFT"/>follow_all_redirects : bool<br ALIGN="LEFT"/>follow_redirects : bool<br ALIGN="LEFT"/>force_exception_to_status_code : bool<br ALIGN="LEFT"/>forward_authorization_headers : bool<br ALIGN="LEFT"/>ignore_etag : bool<br ALIGN="LEFT"/>optimistic_concurrency_methods : list<br ALIGN="LEFT"/>proxy_info<br ALIGN="LEFT"/>redirect_codes : frozenset<br ALIGN="LEFT"/>safe_methods : list<br ALIGN="LEFT"/>timeout : NoneType<br ALIGN="LEFT"/>tls_maximum_version : NoneType<br ALIGN="LEFT"/>tls_minimum_version : NoneType<br ALIGN="LEFT"/>|add_certificate(key, cert, domain, password)<br ALIGN="LEFT"/>add_credentials(name, password, domain)<br ALIGN="LEFT"/>clear_credentials()<br ALIGN="LEFT"/>close()<br ALIGN="LEFT"/>request(uri, method, body, headers, redirections, connection_type)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"httplib2.error.HttpLib2Error" [color="black", fontcolor="red", label=<{HttpLib2Error|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"function.Line" [color="black", fontcolor="black", label=<{Line|x1<br ALIGN="LEFT"/>x2<br ALIGN="LEFT"/>y1<br ALIGN="LEFT"/>y2<br ALIGN="LEFT"/>|calc(number)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"function.LiniarFunction" [color="black", fontcolor="black", label=<{LiniarFunction|freecoef_2adic : tuple<br ALIGN="LEFT"/>freecoef_rat : Fraction<br ALIGN="LEFT"/>freecoefs : list<br ALIGN="LEFT"/>precision<br ALIGN="LEFT"/>slopecoef_2adic : tuple<br ALIGN="LEFT"/>slopecoef_rat : Fraction<br ALIGN="LEFT"/>|cablenum()<br ALIGN="LEFT"/>divideoncables()<br ALIGN="LEFT"/>divideonlines(freecoef_rat)<br ALIGN="LEFT"/>fractionTo2adic(rational)<br ALIGN="LEFT"/>info()<br ALIGN="LEFT"/>multiplicativeOrder(A, N)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"mainwindow.MainWindow" [color="black", fontcolor="black", label=<{MainWindow|container<br ALIGN="LEFT"/>graph<br ALIGN="LEFT"/>|addfunction()<br ALIGN="LEFT"/>close()<br ALIGN="LEFT"/>draw(functionWidget, precision)<br ALIGN="LEFT"/>drawclick()<br ALIGN="LEFT"/>onquit()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"plantuml.PlantUML" [color="black", fontcolor="black", label=<{PlantUML|HttpLib2Error<br ALIGN="LEFT"/>auth : NoneType<br ALIGN="LEFT"/>auth_type : NoneType<br ALIGN="LEFT"/>http<br ALIGN="LEFT"/>request_opts : dict<br ALIGN="LEFT"/>url<br ALIGN="LEFT"/>|get_url(plantuml_text)<br ALIGN="LEFT"/>processes(plantuml_text)<br ALIGN="LEFT"/>processes_file(filename, outfile, errorfile, directory)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"plantuml.PlantUMLConnectionError" [color="black", fontcolor="red", label=<{PlantUMLConnectionError|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"plantuml.PlantUMLError" [color="black", fontcolor="red", label=<{PlantUMLError|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"plantuml.PlantUMLHTTPError" [color="black", fontcolor="red", label=<{PlantUMLHTTPError|content<br ALIGN="LEFT"/>message<br ALIGN="LEFT"/>response<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"widgets.WidgetsContainer" [color="black", fontcolor="black", label=<{WidgetsContainer|Widgets : list<br ALIGN="LEFT"/>container<br ALIGN="LEFT"/>itemargs : tuple<br ALIGN="LEFT"/>iteminitfunc<br ALIGN="LEFT"/>|addItem()<br ALIGN="LEFT"/>setItemArgs()<br ALIGN="LEFT"/>setItemInit(initfunc)<br ALIGN="LEFT"/>showwidget()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"plantuml.PlantUMLConnectionError" -> "plantuml.PlantUMLError" [arrowhead="empty", arrowtail="none"];
"plantuml.PlantUMLHTTPError" -> "plantuml.PlantUMLConnectionError" [arrowhead="empty", arrowtail="none"];
"graph.Graph" -> "mainwindow.MainWindow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="graph", style="solid"];
"httplib2.Http" -> "plantuml.PlantUML" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="http", style="solid"];
"httplib2.error.HttpLib2Error" -> "plantuml.PlantUML" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="HttpLib2Error", style="solid"];
"widgets.WidgetsContainer" -> "mainwindow.MainWindow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="container", style="solid"];
}
